(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{364:function(t,e,s){"use strict";s.r(e);var a=s(45),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"uselatestvalue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#uselatestvalue"}},[t._v("#")]),t._v(" useLatestValue")]),t._v(" "),s("p",[t._v("Subscribes to "),s("code",[t._v("source$")]),t._v(" and returns/yields the latest emitted value, re-rendering the component when "),s("code",[t._v("source$")]),t._v(" emits a new value.")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token generic-function"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useLatestValue")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("TValue"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("source$"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Observable"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("TValue"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" TValue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token generic-function"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useLatestValue")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("TValue"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("source$"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" BehaviorSubject"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("TValue"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" TValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Like "),s("a",{attrs:{href:"/api/hooks/use-subscription"}},[t._v("useSubscription")]),t._v(" if the source observable changes in between re-renders this hook will automatically unsubscribe from the old observable and resubscribe to the new one. However, until the new observable emits a value this hook will return the last emitted value of the previous observable.")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Concurrent mode safety")]),t._v(" "),s("p",[t._v("To make this hook concurrent mode safe the subscription is created after the component initially mounts, thus will always return "),s("code",[t._v("undefined")]),t._v(" when called on the initial render. BehaviorSubject subjects however can negate this as their values can be read synchronously (see below). You can find out more about concurrent mode safety "),s("a",{attrs:{href:"/guide/core-concepts#concurrent-mode-safety"}},[t._v("here")]),t._v(".")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("BehaviorSubjects")]),t._v(" "),s("p",[t._v("Unlike other observable, RxJS' "),s("a",{attrs:{href:"https://rxjs.dev/api/index/class/BehaviorSubject",target:"_blank",rel:"noopener noreferrer"}},[t._v("BehaviorSubjects"),s("OutboundLink")],1),t._v(" provide a "),s("code",[t._v("getValue")]),t._v(" method for reading its current value. This hook utilizes this method to get the current value on the initial render, before the component has mounted and the subscription has been established, avoiding the need to default to "),s("code",[t._v("undefined")]),t._v(".")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Error Handling")]),t._v(" "),s("p",[t._v("If an error is thrown by the source observable, then it will be treated as if thrown by the component during the rendering process. Thus requiring a React error boundary to catch the error.")])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("Internally this hook uses the "),s("code",[t._v("useState")]),t._v(" hook, as a result synchronous updates may be batched by React in order to reduce re-renders. In very rare cases this may cause unexpected results.")]),t._v(" "),s("p",[t._v("To prevent this the source observable must be modified so that the subscription creation and/or the notification delivery is performed asynchronously. This can be done by calling the "),s("code",[t._v("subscribeOn")]),t._v(" operator and/or the "),s("code",[t._v("observeOn")]),t._v(" operator with the "),s("code",[t._v("asyncScheduler")]),t._v(". You can find out more on RxJS' schedulers "),s("a",{attrs:{href:"https://rxjs.dev/guide/scheduler",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),s("OutboundLink")],1),t._v(".")])]),t._v(" "),s("h3",{attrs:{id:"example"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[t._v("#")]),t._v(" Example")]),t._v(" "),s("p",[t._v("Example counter code with "),s("a",{attrs:{href:"/api/hooks/use-state-observable"}},[t._v("useStateObservable")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-jsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create an observable of the current value and a function to update it")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("count$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" setCount"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useStateObservable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Yield the latest emitted value from count")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useLatestValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("The current count is ")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);